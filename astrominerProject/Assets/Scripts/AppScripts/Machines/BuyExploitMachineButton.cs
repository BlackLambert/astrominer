using SBaier.DI;
using UnityEngine;
using UnityEngine.UI;

namespace SBaier.Astrominer
{
    public class BuyExploitMachineButton : MonoBehaviour, Injectable
    {
        [SerializeField]
        private Button _button;

		private ExploitMachineShop _shop;
		private Ship _ship;
		private Player _player;
		private ExploitMachineBuyer _buyer;

		public void Inject(Resolver resolver)
		{
			_shop = resolver.Resolve<ExploitMachineShop>();
			_player = resolver.Resolve<Player>();
			_ship = resolver.Resolve<Ship>();
			_buyer = resolver.Resolve<ExploitMachineBuyer>();
		}

		private void OnEnable()
		{
			UpdateInteractable();
			_button.onClick.AddListener(BuyMachine);
			_player.Credits.OnAmountChanged += UpdateInteractable;
			_shop.OnSelectedLevelChange += UpdateInteractable;
			_ship.Machines.OnLimitChanged += UpdateInteractable;
			_ship.Machines.OnItemsChanged += UpdateInteractable;
		}

		private void OnDisable()
		{
			_button.onClick.RemoveListener(BuyMachine);
			_player.Credits.OnAmountChanged -= UpdateInteractable;
			_shop.OnSelectedLevelChange -= UpdateInteractable;
			_ship.Machines.OnLimitChanged -= UpdateInteractable;
			_ship.Machines.OnItemsChanged -= UpdateInteractable;
		}

		private void UpdateInteractable()
		{
			_button.interactable = IsInteractable();
		}

		private bool IsInteractable()
		{
			return _player.Credits.Has(_shop.SelectedLevelSettings.Price) &&
				!_ship.Machines.LimitReached;
		}

		private void BuyMachine()
		{
			_ship.Machines.Add(_buyer.BuyMachine(_player, _shop.SelectedLevelSettings));
		}
	}
}
