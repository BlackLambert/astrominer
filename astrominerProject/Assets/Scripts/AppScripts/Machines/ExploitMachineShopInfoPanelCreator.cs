using SBaier.DI;
using UnityEngine;

namespace SBaier.Astrominer
{
	public class ExploitMachineShopInfoPanelCreator : MonoBehaviour, Injectable
	{
		[SerializeField]
		private Transform _hook;

		private Factory<ExploitMachineInfoPanel, ExploitMachineInfoPanel.Arguments> _factory;
		private ExploitMachineShop _shop;

		private ExploitMachineInfoPanel _currentInfoPanel;

		public void Inject(Resolver resolver)
		{
			_factory = resolver.Resolve<Factory<ExploitMachineInfoPanel, ExploitMachineInfoPanel.Arguments>>();
			_shop = resolver.Resolve<ExploitMachineShop>();
		}

		private void Start()
		{
			CreateNewPanel();
			_shop.OnSelectedLevelChange += UpdateInfoPanel;
		}

		private void OnDestroy()
		{
			_shop.OnSelectedLevelChange -= UpdateInfoPanel;
		}

		private void UpdateInfoPanel()
		{
			TryDestructCurrentPanel();
			CreateNewPanel();
		}

		private void TryDestructCurrentPanel()
		{
			if (_currentInfoPanel != null)
				DestructCurrentPanel();
		}

		private void DestructCurrentPanel()
		{
			Destroy(_currentInfoPanel.gameObject);
			_currentInfoPanel = null;
		}

		private void CreateNewPanel()
		{
			_currentInfoPanel = _factory.Create(new ExploitMachineInfoPanel.Arguments(
				_shop.SelectedLevelSettings, _shop.SelectedLevel));
			_currentInfoPanel.transform.SetParent(_hook, false);
		}
	}
}
