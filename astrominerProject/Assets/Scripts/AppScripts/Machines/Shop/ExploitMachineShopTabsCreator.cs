using SBaier.DI;
using System.Collections.Generic;
using UnityEngine;

namespace SBaier.Astrominer
{
	public class ExploitMachineShopTabsCreator : MonoBehaviour, Injectable
	{
		[SerializeField]
		private Transform _hook;

		private ExploitMachineShop _shop;
		private Pool<ExploitMachineShopTab, int> _pool;
		private ExploitMachineSettings _settings;

		private List<ExploitMachineShopTab> _tabs = new List<ExploitMachineShopTab>();

		public void Inject(Resolver resolver)
		{
			_shop = resolver.Resolve<ExploitMachineShop>();
			_pool = resolver.Resolve<Pool<ExploitMachineShopTab, int>>();
			_settings = resolver.Resolve<ExploitMachineSettings>();
		}

		private void OnEnable()
		{
			CreateTabs();
			_shop.OnPooling += ReturnTabs;
		}

		private void OnDisable()
		{
			_shop.OnPooling -= ReturnTabs;
		}

		private void CreateTabs()
		{
			for (int i = 0; i < _settings.Levels.Length; i++)
				CreateTab(i);
		}

		private void CreateTab(int i)
		{
			ExploitMachineShopTab tab = _pool.Request(i);
			tab.transform.SetParent(_hook, false);
			_tabs.Add(tab);
		}

		private void ReturnTabs()
		{
			foreach (ExploitMachineShopTab tab in _tabs)
				_pool.Return(tab);
			_tabs.Clear();
		}
	}
}
