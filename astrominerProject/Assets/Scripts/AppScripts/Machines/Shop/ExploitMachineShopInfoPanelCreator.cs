using SBaier.DI;
using UnityEngine;

namespace SBaier.Astrominer
{
	public class ExploitMachineShopInfoPanelCreator : MonoBehaviour, Injectable
	{
		[SerializeField]
		private Transform _hook;

		private Pool<ExploitMachineInfoPanel, ExploitMachineInfoPanel.Arguments> _pool;
		private ExploitMachineShop _shop;

		private ExploitMachineInfoPanel _currentInfoPanel;

		public void Inject(Resolver resolver)
		{
			_pool = resolver.Resolve<Pool<ExploitMachineInfoPanel, ExploitMachineInfoPanel.Arguments>>();
			_shop = resolver.Resolve<ExploitMachineShop>();
		}

		private void OnEnable()
		{
			CreateNewPanel();
			_shop.OnSelectedLevelChange += UpdateInfoPanel;
		}

		private void OnDisable()
		{
			TryReturnCurrentPanel();
			_shop.OnSelectedLevelChange -= UpdateInfoPanel;
		}

		private void UpdateInfoPanel()
		{
			TryReturnCurrentPanel();
			CreateNewPanel();
		}

		private void TryReturnCurrentPanel()
		{
			if (_currentInfoPanel != null)
				ReturnCurrentPanel();
		}

		private void ReturnCurrentPanel()
		{
			_pool.Return(_currentInfoPanel);
			_currentInfoPanel = null;
		}

		private void CreateNewPanel()
		{
			_currentInfoPanel = _pool.Request(new ExploitMachineInfoPanel.Arguments(
				_shop.SelectedLevelSettings, _shop.SelectedLevel));
			_currentInfoPanel.transform.SetParent(_hook, false);
		}
	}
}
